version: '3.6'

services:

  nestjs-rabbitmq:
    container_name: nestjs-rabbitmq
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: mysecretpassword

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nest-pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: mysecretpassword

    ports:
      - '5050:80'
    depends_on:
      - postgres

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - '6379:6379'
  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - nestjs-rabbitmq
      - postgres
      - redis
    volumes:
      - .:/usr/src/app 
    
    command: >
      /bin/sh -c "
      while ! nc -z postgres 5432; do sleep 1; done;
      npx prisma migrate deploy && npx prisma generate && npm run start:dev auth
      "


    ports:
      - '3001:3001'

  notification:
    build:
      context: ./
      dockerfile: ./apps/notification/Dockerfile
    env_file:
      - .env
    depends_on:
      - nestjs-rabbitmq
      - postgres
      - redis
      - auth
    volumes:
      - .:/usr/src/app 
      - /usr/src/app/node_modules
    command: npm run start:dev notification

    ports:
      - '3005:3005'

  orders:
    build:
      context: ./
      dockerfile: ./apps/orders/Dockerfile
    env_file:
      - .env
    depends_on:
      - nestjs-rabbitmq
      - postgres
      - redis
      - auth
    volumes:
      - .:/usr/src/app 
      - /usr/src/app/node_modules
    command: npm run start:dev orders
    ports:
      - '3003:3003'
  products:
    build:
      context: ./
      dockerfile: ./apps/products/Dockerfile
    env_file:
      - .env
    depends_on:
      - nestjs-rabbitmq
      - postgres
      - redis
      - auth
    volumes:
      - .:/usr/src/app 
      - /usr/src/app/node_modules
    command: npm run start:dev products
    ports:
      - '3004:3004'
  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   ports:
  #     - '9090:9090'

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana:latest
  #   ports:
  #     - '3030:3000'
